---
layout: post
title:  "作为现代开发人员，你必须掌握它"
date:   2017-10-21 13:12:10 +0800
categories: [Web, API]
---
如果你从事网络开发相关工作，一定听说过 API。

**虽然第一次看到 API 可能令人生畏，但它确实改变了开发人员的开发习惯。**

为什么？学习正确的使用 API 可以令你的开发工作更简单，更高效。构建和集成 API 可以为你的客户和你们自己带来很多好处。

作为开发，你应该经常听到这样的劝告，**“不要重复造轮子”**。而 API 在不重复造轮子方面起着重要的作用，所以，我们相信了解 API 的基础知识是现代开发人员必备的技能。下面我们的文章将帮助你做到这一点，我们将介绍：

* 使用 API 的好处
* 什么是 API
* 有哪些类型的 API
* 有关使用 API 的实际用例

### API 的好处是什么？我们为什么要使用它？

![](http://pic.zinaer.com/201710/top_level_skill.gif)
<center><small>*用 API 升级你的开发技能*</small></center>

**学会使用 API 可以大大提高开发效率**

首先，有些逻辑和代码你不必自己编写，毕竟有些功能你可能也写不来，为了节省时间，所以必须了解 API 的使用。

其次，你可能面临的一些问题，其他人可能已经解决了。不论现有的解决方案是什么形式（FaaS，库，Web 服务，SDK，content API 等），你最有可能需要使用 API 去对接它们。

### 什么是 API 呢？

![](http://pic.zinaer.com/201710/api_ms.png)
<center><small>*图片来自 MS*</small></center>

官方的定义是这样的：

> 在计算机编程中，应用程序编程接口（API）是用于构建应用软件的一组子程序定义，协议和工具。一般来说，它是一组明确定义的各种软件组件之间的通信方法。一个好的 API 使得通过提供所有的构建块来开发一个计算机程序变得更加容易，程序员可以将它们放在一起。

是不是太学术，晦涩难懂，我们来个简单的定义：

**简单地说，一个 API 声明一个接口，让你与它进行逻辑交互，而不必关心它具体是怎么运行的。**这个定义可以适用于任何语言，协议或环境，只要是在它上面运行的。

为了更好理解 API，下面我们列举下它不是怎样的：

* **API 不一定是外部服务。**比如：可以直接引用相关库，或者通过 API 使用。
* **API 不仅仅是一个接口。**它也是规范／格式和功能实现
* **API 不是 GUI（图形用户界面）。**它不进行图形界面交互，只通过编程语言或者通信协议进行交互。

#### 不同类型 API

所有的 API 不是相同的，即使它们有时可能实现的功能一样，一些甚至是比其它更优秀。探究创造更优秀的 API 不是本文的目的，如果感兴趣可以参考 Google 的 [API Design Guide](https://cloud.google.com/apis/design/)。

#### Endpoints

API 的目的是使开发更容易，怎么做到呢？通过把功能整合在一起，通过 Endpoints（通常用于于 API 通信的 URL 格式）对外调用。Endpoints 是与任何 API 交互的唯一方法。每个 Endpoints 将会为**请求**和**响应**制定格式，你可以在 API 文档中查看它们。

Endpoints 可以是一个简单的函数，也可以是许多函数调用的集合，不过这些功能基本上都是抽象的，你不需要知道它们内部发生了什么，你只要使用正确的方式就可以在你的程序里使用它们。

说白了，API 就像是开关，比如：你按下开关就可以打开灯，你不必关心电流是怎么工作的。

#### 阅读和理解 API 文档

这里不赘述更详细的概念性的东西，我们通过一个简单的 API 例子来理解它。我们将要拿 JavaScript 的 Math 对象来说明。

你可以在[文档](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math)中看到，对象的每个方法都描述了输入格式和输出格式是怎样的。有没有发现，这些方法并没有提它内部是怎么运行的。你可以打开浏览器的控制台，输入 `Math.sqrt`，将要得到下图的结果：

![](http://pic.zinaer.com/201710/math_sqrt.png)

这就是 API，你无论是调用系统 API 还是 Web 服务 API，都遵循上面提到的规则。

#### 基本的 API 使用

有很多功能已经被一些有名的 API 实现了，比如：Google、高德的地图 API 被调用用于实现定位等好的用户体验，阿里云、又拍云等云服务公司提供很多基础服务 API，供创业公司调用快速实现产品。

现在你访问这篇文章，说明你当下对 API 比任何东西都感兴趣。所以我们来看个具体的用例，我们这里将使用 Postman，一款功能强大的网页调试与发送网页 HTTP 请求的 Chrome 插件。建议开始使用前，先花些时间了解下这个工具，对你有好处。

**使用公共的 API 服务获取数据**

这里使用 **Zinaer API** 服务中的一个，它不需要验证，并且是遵循 REST 风格的 API，没错，就是基于 Web 的 API 服务，正因为如此，它需要遵循一些协议特性，HTTP 请求（GET, PUT, POST, DELETE 等），这里我们尽量简单，使用 GET 请求，如图：

![](http://pic.zinaer.com/201710/api_postman.png)

可以看到，你不需要传任何参数，用 GET 方式，键入 URL `https://api.zinaer.com/` 就可以获取到接口返回的信息。

**使用需要身份验证的私有 API**

相信上边你已经基本了解了 API 的运行，接下来，我们通过调用 **Zinaer API** 的马拉松列表接口，实现马拉松信息的展示来说明私有 API。

![](http://pic.zinaer.com/201710/marathon_list.png!/fw/600)

可以看到通过 POST 请求，传送 `api_token`（用于身份验证）到接口，就可以获取到 API 返回的数据，这里面也有其它可选参数，比如：`date`，可以返回某个时间段的赛事列表，`search_name` 可以用于搜索匹配到的赛事列表。获取到数据后，再通过表现层进行展示。最终效果：

![](http://pic.zinaer.com/201710/marathon.png!/fw/300)

### 结束语

希望这篇文章有帮助到你理解 API，另外，下面是一些建议：

* API 将要加速你的开发，扩大你的开发领域，请使用它！
* API 不仅仅存在于 Web 生态系统中，你可以到处使用它。
* 如果你想用一个 API，请仔细阅读它的文档。
* 在写代码之前，先利用各种工具进行搜索，说不定别人已经实现了相关功能。

接下来做什么？尽情的编写代码吧，这是你快速掌握 API 的最佳途径。

====

![](http://pic.zinaer.com/201710/zanshang.jpg)

<small>*微信扫一扫进行赞赏*</small>

![](http://pic.zinaer.com/201710/zinaer_wx.jpg)

<small>*微信扫一扫关注此公众号*</small>
